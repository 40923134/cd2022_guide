var tipuesearch = {"pages": [{'title': 'About', 'text': '何謂協同? \n 若以拔河為例, "合作" (Cooperation) 的層次在多人參與既定的拔河活動, 過程中有許多傳統的實體集合練習, 最終目的則是能夠在傳統拔河活動中勝出. \n 在 cd2022 課程的定義下, "協同" (Collaborative) 設計的層次則希望能夠在"合作"的架構下, 納入更多的創新思維, 探討能否讓多人參與拔河活動, 各自在不同地理位置, 能在虛實整合與機電資架構的合成設計下, 讓多人進行一場公平的拔河活動, 且讓夢想成真的一隊得以克敵制勝. \n 課程倉儲與網站: \n https://github.com/mdecourse/cd2022 \n https://mde.tw/cd2022 \n Week1: \n 網路設定: \n 由於目前電腦輔助設計室中的電腦只要將網路連接到系上的主幹 (因為課程要全面在純 IPv6 網段上運作), 直接連外, 電腦中就會有蠕蟲程式啟動攻擊, 造成操作系統所安裝的防毒軟體為了防堵惡意攻擊而關閉網路連線. \n 為因應上述問題, 可以在切換至連外網段後, 將系統的代理主機自動偵測關閉, 且自行設定能夠支援 IPv6 與 IPv4 的代理主機, 並且關閉網路卡的 IPv4 網路協定, 就可以避開惡意軟體的攻擊. \n 若要在開機後, 防毒軟體啟動前, 以批次檔案的執行, 自動完成上述三項設定, 可以參考: \n 電腦輔助設計室  IPv6 網路設定 \n 分組: \n 利用 Ethercalc 收集各班學員的 Github 帳號與組別, 存入  https://github.com/mdecourse/studlist/tree/main/2022spring \n 各學員若 github 帳號有更動, 可以自行至  https://github.com/mdecourse/studlist  倉儲, 以 pull requests 進行修改. \n 以 2b 為例, 每一大組 8 人, 且分為兩個 4 人小組, 目前可以透過  http://mde.tw/studlist/2022spring/2b.txt  讀取. 且透過  read_data_from_nfulist.py  可以在近端讀取各班學員的 github 帳號與組別. \n 目前碰到的問題是: \n 能不能透過隨機方式自動幫尚未納組的學員分組? \n 參考:  grp_2022 \n 能不能直接在網站上顯示出各學員的 cd2022 課程倉儲與網站? \n 下載課程工具: \n 協同產品設計實習課程將會用到 NX1980, 若在電腦輔助設計室, 可以直接從  http://wcm.cycu.org:88/  下載. \n 讀取各學員每週工作內容: \n 當完成分組後, 且各學員已經透過各自 Github 帳號下的 cd2022 倉儲開始執行課程任務後, 能否透過程式逐日或逐週讀取各學員的工作內容? \n \n \n Please enable JavaScript to view the  comments powered by Disqus.', 'tags': '', 'url': 'About.html'}, {'title': 'IPv6', 'text': '電腦輔助設計室  IPv6 網路設定 \n 智慧財產局學校行政與電算中心篇 \n 如何避免惡意軟體的侵害 ? \n 問題: \n 為何不使用 NAT 機制, 而讓電腦輔助設計室中的電腦直接連上外部網路? \n 使用 IPv6 連網有哪些好處? 有沒有壞處? \n 如何使用批次檔案完成 IPv6 網路設定, 避開惡意軟體的網路攻擊? \n', 'tags': '', 'url': 'IPv6.html'}, {'title': 'Grouping', 'text': 'cd2022  課程由學員自行分組, 每四人為一小組, 每兩小組組成一大組. \n 所有課程指定內容可由各小組組員討論 (每週至少開會一次, 且將小組討論過程與結論放入各小組分組倉儲) 後, 在個人所負責的項目執行完成後, 先納入個人 cd2022 倉儲後, 再依照組序整合至該小組組長的協同倉儲 (例如: 甲班第一大組的第一小組倉儲名稱將為: cd2022ag1-1, 甲班第一大組的第二小組倉儲名稱將為: cd2022ag1-2). \n 各大組成員每兩週在上課之前必須至少開會一次, 且將大組討論過程與結論放入各大組分組倉儲後 (例如: 甲班第一大組的倉儲名稱將為: cd2022ag1), 比較並統整各小組所完成的內容後, 將協同設計結果納入各大組的分組倉儲, 且各大組每兩週將利用課程時間進行網際協同分組簡報. \n 以下 Brython 程式可讀取各大組的學員分組資料後, 直接在網頁中列出各學員 cd2022 倉儲與網頁連結、各小組協同倉儲與網頁連結、以及各大組協同倉儲與網頁連結. \n 請注意: 各組學員 github 帳號下除建有個人 cd2022 倉儲外, 還必須 fork 大組倉儲 (例如: 甲班第一大組的倉儲名稱將為: cd2022ag1) 並在各大組進行網際協同分組簡報前, 與所屬大組的分組協同倉儲內容保持同步. \n grp_2022.py  ( run )', 'tags': '', 'url': 'Grouping.html'}, {'title': 'Solvespace', 'text': '根據  https://mde.tw/cad2021/content/Compile%20Solvespace.html  中的說明, 可以利用  compile_copsim_for_cd2022.7z  (file size: 5 GB, extracted size: 17.3 GB), 完成編譯. \n 自行編譯 Solvespace 的目的是希望透過  https://www.coppeliarobotics.com/helpFiles/en/xmlFormat.htm  與  https://www.coppeliarobotics.com/helpFiles/en/importExport.htm  的資訊, 自行在 Solvespace 中將組立檔案直接轉入 Coppeliasim 的場景檔案. 其中牽涉如何將 Solvespace 組立件中的零件檔案進行分割後, 以  STL 、 URDF  或  SDF  格式直接轉入 Coppeliasim.', 'tags': '', 'url': 'Solvespace.html'}, {'title': 'NX1980', 'text': 'NX1980 參考頁面: \n https://mde.tw/cd2022/content/NX1980.html \n 假如在系上網段, 可直接從  http://wcm.cycu.org:88  下載  http://wcm.cycu.org:88/NX1980_cd2022.7z . \n 問題: \n http://wcm.cycu.org:88  是如何建置的? (採純 IPv6 設定, 且只允許特定網段下載) \n 可攜 NX1980 是如何建立的? \n 如何讓 NX1980 認證伺服器能夠 IPv6 相容? \n 如何安裝 NX1980 認證伺服器?', 'tags': '', 'url': 'NX1980.html'}, {'title': 'Onshape', 'text': '以  Onshape 中的 uArm robot . (並未自行繪製零組件而是從  uArmSwiftPro_UP1300_3D.STEP  import)', 'tags': '', 'url': 'Onshape.html'}, {'title': 'Tic-Tat-Toe', 'text': 'UR10e  Robot 透過影像辨識與人進行  Tic-Tat-To e 遊戲: \n \n cd2022  則希望透過  uArm  robot 搬動 OX 棋子的方式進行  Tic-Tat-To e 遊戲. \n 且 uArm robot 的零組件要求分別由 Solvespace, NX1980 與 Onshape 執行設計繪圖後轉入 Coppeliasim 場景完成機電資系統模擬. \n 其中 uArm 原型零件採用 3D 列印或雷射切割的製造過程可依照  Realization  頁面中的模擬系統進行, 並包括齒輪減速機的設計運算與  Arduino 伺服馬達的控制模擬 . \n uArm 零組件: \n 以  Onshape 中的 uArm robot . (並未自行繪製零組件而是從  uArmSwiftPro_UP1300_3D.STEP  import) \n', 'tags': '', 'url': 'Tic-Tat-Toe.html'}, {'title': 'run', 'text': '\n \n \n \n \n \n \n \n  Cango 程式庫  \n \n \n \n \n \n \n \n \n  for Konva 程式庫  \n \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["py_src"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n add 1 to 100 p261 ROC flag PROC flag USA flag Draw Grid Random Rect Rect Walk Rect U Walk Rect rev U Walk 單節貪食蛇 5 個紅點方塊 Snake BSnake auto_guess ball bezier big_lotto brython_kw bunny cango_spur cango_spur1 cango_three_gears clear clock convert_temp deepmerge display_stl draw ex1 ex2 ex3 ex4 fibo fourbar grp_2022 guess_a_number hw1_1 hw1_2 Keycode knova1 merge3 power_lotto spur spur_w_form stl_binary_ascii stl_writer Tetris turtle1 turtle2 turtle3 turtle4 turtle5 turtle6 turtle7 turtle8 twl_link_ik webcam websocket ycqsort \n  ######################  editor1 開始 ######################  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div 作為切入位置  \n  這裡的畫布 id 為 brython_div  \n \n  graphics-column is for ggame  \n \n  ######################  editor1 結束 ######################  \n  以下可以開始利用 editor1 的設定編寫對應 Brython 程式  \n \n  以上為內建程式, 頁面可透過 ?src=gist_url 執行  \n  add 1 to 100 開始  \n \n', 'tags': '', 'url': 'run.html'}]};